vF <- 1.5         #Progression rate of acute infection per year#
vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
popConst <- 1000#
#
generateIncidence <- function(dataSet) {#
  IN0   <- 1e6 * (vF*dataSet$F0 + vL0*dataSet$L0)/dataSet$N0#
  IN1   <- 1e6 * (vF*dataSet$F1 + vL1*dataSet$L1)/dataSet$N1#
  INall <- 1e6 * (vF*(dataSet$F0 + dataSet$F1) + vL0*dataSet$L0 + vL1*dataSet$L1)/(dataSet$N0 + dataSet$N1)#
  frame <- data.frame(IN0,IN1,INall)#
  write.table(frame, file="incData.csv", sep=",")#
  return(frame)#
}#
args <- commandArgs(trailingOnly = T)#
if (length(args) > 0) {#
  firstDataSet <- read.csv('modelDataRun1.csv')#
  deltaT  <- as.numeric(args[1])#
  print(deltaT)#
  if (length(args) > 2) {#
    initialYr <- as.integer(args[2])#
    finalYr   <- as.integer(args[3])#
  } else {#
    # Defaults:#
    initialYr <- 2000#
    finalYr   <- 2100#
  }#
} else if (!exists('noImport')) {#
  firstDataSet   <- read.csv('modelDataRun1.csv')#
  deltaT    <- .05#
  initialYr <- 2000#
  finalYr   <- 2100#
} else if (!exists('dataSet')) {#
  print('No Data to Plot! Either list the import file as a cmd argument, or define it in the calling script')#
  stop()#
} #
if (Sys.info()['sysname'] == "Linux") {#
  #Making it plot on linux#
  X11.options(type='nbcairo')#
}#
#
yrs <- seq(initialYr, finalYr - deltaT, deltaT)#
firstInc <- generateIncidence(firstDataSet)#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type='l'    --> draw line connecting data points#
#col='blue'  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
#Plot:#
yrange <- range(c(0.5,firstInc$IN1,firstInc$INall))#
dev.new()#
plot( yrs, firstInc$IN0,   main='Incidence over Time', xlab='year', ylab='incidence/million', ylim=yrange, type='l', col='blue') #log = 'y')#
lines(yrs, firstInc$INall, type='l', col='red')#
lines(yrs, firstInc$IN1,   type='l', col='green')#
#
filename <- "modelDataRun"#
runNumber <- 2#
extension <- ".csv"#
fileNameFull <- "modelDataRun2.csv"#
while (file.exists(fileNameFull)) {#
	dataSet <- read.csv(fileNameFull)#
	inc <- generateIncidence(dataSet)#
	lines(yrs, inc$IN0, type='l', col='blue')#
	lines(yrs, inc$INall, type='l', col='red')#
	lines(yrs, inc$IN1, type='l', col='green')#
	runNumber <- runNumber + 1#
        if (runNumber == 734) {#
		runNumber <- 757#
	} else if (runNumber == 1047) {#
		runNumber <- 1081#
	}#
	fileNameFull <- paste(filename, as.character(runNumber), extension,sep="")#
    print(fileNameFull)#
}#
#
#Deterministic Data:#
detInc    <- read.csv('detHillData.csv')#
detDeltaT <- (100/length(detInc$IN0))#
detYrs    <- seq(initialYr, finalYr - detDeltaT, detDeltaT)#
lines(detYrs, detInc$IN0,   type='l', col='#052A6E')#
lines(detYrs, detInc$IN1,   type='l', col='#A6D400')#
lines(detYrs, detInc$INall, type='l', col='#00782D')#
#
abline(h = 1, lty = 'dotted')#
legend('topright', legend=c('USB incidence','FB incidence','Total incidence'), col=c('blue', 'green', 'red'), lty=c(1,1,1))
vF <- 1.5         #Progression rate of acute infection per year#
vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
popConst <- 1000#
#
generateIncidence <- function(dataSet) {#
  #IN0   <- 1e6 * (vF*dataSet$F0 + vL0*dataSet$L0)/dataSet$N0#
  #IN1   <- 1e6 * (vF*dataSet$F1 + vL1*dataSet$L1)/dataSet$N1#
  #INall <- 1e6 * (vF*(dataSet$F0 + dataSet$F1) + vL0*dataSet$L0 + vL1*dataSet$L1)/(dataSet$N0 + dataSet$N1)#
  #IN0   <- 1e6 * (dataSet$newF0 + dataSet$newL0)/dataSet$N0#
  #IN1   <- 1e6 * (dataSet$newF1 + dataSet$newL1)/dataSet$N1#
  #INall <- 1e6 * (dataSet$newF0 + dataSet$newF1 + dataSet$newL0 + dataSet$newL1)/(dataSet$N0 + dataSet$N1)#
  IN0   <- dataSet$newF0#
  IN1   <- dataSet$newF1#
  INall <- dataSet$newF0 + dataSet$newF1#
  frame <- data.frame(IN0,IN1,INall)#
  write.table(frame, file="incData.csv", sep=",")#
  return(frame)#
}#
args <- commandArgs(trailingOnly = T)#
if (length(args) > 0) {#
  firstDataSet <- read.csv('modelDataRun1.csv')#
  deltaT  <- as.numeric(args[1])#
  print(deltaT)#
  if (length(args) > 2) {#
    initialYr <- as.integer(args[2])#
    finalYr   <- as.integer(args[3])#
  } else {#
    # Defaults:#
    initialYr <- 2000#
    finalYr   <- 2100#
  }#
} else if (!exists('noImport')) {#
  firstDataSet   <- read.csv('modelDataRun1.csv')#
  deltaT    <- .05#
  initialYr <- 2000#
  finalYr   <- 2100#
} else if (!exists('dataSet')) {#
  print('No Data to Plot! Either list the import file as a cmd argument, or define it in the calling script')#
  stop()#
} #
if (Sys.info()['sysname'] == "Linux") {#
  #Making it plot on linux#
  X11.options(type='nbcairo')#
}#
#
yrs <- seq(initialYr, finalYr - deltaT, deltaT)#
firstInc <- generateIncidence(firstDataSet)#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type='l'    --> draw line connecting data points#
#col='blue'  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
#Plot:#
yrange <- range(c(0.5,firstInc$IN1,firstInc$INall))#
dev.new()#
plot( yrs, firstInc$IN0,   main='Incidence over Time', xlab='year', ylab='incidence/million', ylim=yrange, type='l', col='blue', log = 'y')#
lines(yrs, firstInc$INall, type='l', col='red')#
lines(yrs, firstInc$IN1,   type='l', col='green')#
#
filename <- "modelDataRun"#
runNumber <- 2#
extension <- ".csv"#
fileNameFull <- "modelDataRun2.csv"#
while (file.exists(fileNameFull)) {#
	dataSet <- read.csv(fileNameFull)#
	inc <- generateIncidence(dataSet)#
	lines(yrs, inc$IN0, type='l', col='blue')#
	lines(yrs, inc$INall, type='l', col='red')#
	lines(yrs, inc$IN1, type='l', col='green')#
	runNumber <- runNumber + 1#
        if (runNumber == 734) {#
		runNumber <- 757#
	} else if (runNumber == 1047) {#
		runNumber <- 1081#
	}#
	fileNameFull <- paste(filename, as.character(runNumber), extension,sep="")#
    print(fileNameFull)#
}#
#
#Deterministic Data:#
detInc    <- read.csv('detHillData.csv')#
detDeltaT <- (100/length(detInc$IN0))#
detYrs    <- seq(initialYr, finalYr - detDeltaT, detDeltaT)#
lines(detYrs, detInc$IN0,   type='l', col='#052A6E')#
lines(detYrs, detInc$IN1,   type='l', col='#A6D400')#
lines(detYrs, detInc$INall, type='l', col='#00782D')#
#
abline(h = 1, lty = 'dotted')#
legend('topright', legend=c('USB incidence','FB incidence','Total incidence'), col=c('blue', 'green', 'red'), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
#f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                  #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                  #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
#sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
	#deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40        #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + deltat*(ro*(N0[i]+N1[i]) + sigmaF0*F0[i] + sigmaL*L0[i] + phi0*(I0[i]+J0[i]) - lambda0*S0[i] - mu0*S0[i])#
		F0[i+1] <- F0[i] + deltat*(p*lambda0*S0[i] + x*p*lambda0*L0[i] - (mu0 + vF + sigmaF0)*F0[i] )#
		L0[i+1] <- L0[i] + deltat*((1-p)*lambda0*S0[i] - x*p*lambda0*L0[i] - (mu0 + vL0 + sigmaL)*L0[i])#
		I0[i+1] <- I0[i] + deltat*(q*(vF*F0[i] + vL0*L0[i]) - (mu0 + mud + phi0)*I0[i])#
		J0[i+1] <- J0[i] + deltat*((1-q)*(vF*F0[i]+vL0*L0[i]) - (mu0 + mud + phi0)*J0[i])#
		S1[i+1] <- S1[i] + deltat*((1-f)*alpha*(N0[i]+N1[i]) + sigmaF1*F1[i] + sigmaL*L1[i] + phi1*(I1[i] + J1[i]) - lambda1*S1[i] - mu1*S1[i])#
		F1[i+1] <- F1[i] + deltat*(g*p*f*alpha*(N0[i]+N1[i]) + p*lambda1*S1[i] + x*p*lambda1*L1[i] - (mu1 + vF + sigmaF1)*F1[i])#
		L1[i+1] <- L1[i] + deltat*((1-g*p)*f*alpha*(N0[i]+N1[i]) + (1-p)*lambda1*S1[i] - x*p*lambda1*L1[i] - (mu1 + vL1 +sigmaL)*L1[i])#
		I1[i+1] <- I1[i] + deltat*(q*(vF*F1[i] + vL1*L1[i]) - (mu1 + mud + phi1)*I1[i])#
		J1[i+1] <- J1[i] + deltat*((1-q)*(vF*F1[i] + vL1*L1[i]) - (mu1 + mud + phi1)*J1[i])#
		N0[i+1] = N0[i] + deltat*((ro - mu0)*N0[i] + ro*N1[i] - mud*(I0[i]+J0[i]))#
    	N1[i+1] = N1[i] + deltat*(alpha*N0[i] + (alpha - mu1)*N1[i] - mud*(I1[i]+J1[i]))#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
resB<-hill(.114,.187)#
resC<-hill(.114,.0935)#
resD<-hill(.114,.04675)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
resAB<-hill(.057,.187,FALSE)#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resAB$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resAB$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resAB$IN1, type="l", col="green", lty=2)#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))#
#
dev.new()#
#
resBB<-hill(.057*4,.187)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resB$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resB$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resB$IN1, type="l", col="green", lty=2)#
lines(1:T*deltat+2000, resBB$IN0, type="l", col="blue", lty=3)#
lines(1:T*deltat+2000, resBB$INall, type="l", col="red", lty=3)#
lines(1:T*deltat+2000, resBB$IN1, type="l", col="green", lty=3)#
#
dev.new()#
#
resCB<-hill(.057*4,.0935)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resC$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resC$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resC$IN1, type="l", col="green", lty=2)#
lines(1:T*deltat+2000, resCB$IN0, type="l", col="blue", lty=3)#
lines(1:T*deltat+2000, resCB$INall, type="l", col="red", lty=3)#
lines(1:T*deltat+2000, resCB$IN1, type="l", col="green", lty=3)#
#
dev.new()#
#
resDB<-hill(.057*4,.04675)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resD$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resD$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resD$IN1, type="l", col="green", lty=2)#
lines(1:T*deltat+2000, resDB$IN0, type="l", col="blue", lty=3)#
lines(1:T*deltat+2000, resDB$INall, type="l", col="red", lty=3)#
lines(1:T*deltat+2000, resDB$IN1, type="l", col="green", lty=3)
ls()
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + deltat*(ro*(N0[i]+N1[i]) + sigmaF0*F0[i] + sigmaL*L0[i] + phi0*(I0[i]+J0[i]) - lambda0*S0[i] - mu0*S0[i])#
		F0[i+1] <- F0[i] + deltat*(p*lambda0*S0[i] + x*p*lambda0*L0[i] - (mu0 + vF + sigmaF0)*F0[i] )#
		L0[i+1] <- L0[i] + deltat*((1-p)*lambda0*S0[i] - x*p*lambda0*L0[i] - (mu0 + vL0 + sigmaL)*L0[i])#
		I0[i+1] <- I0[i] + deltat*(q*(vF*F0[i] + vL0*L0[i]) - (mu0 + mud + phi0)*I0[i])#
		J0[i+1] <- J0[i] + deltat*((1-q)*(vF*F0[i]+vL0*L0[i]) - (mu0 + mud + phi0)*J0[i])#
		S1[i+1] <- S1[i] + deltat*((1-f)*alpha*(N0[i]+N1[i]) + sigmaF1*F1[i] + sigmaL*L1[i] + phi1*(I1[i] + J1[i]) - lambda1*S1[i] - mu1*S1[i])#
		F1[i+1] <- F1[i] + deltat*(g*p*f*alpha*(N0[i]+N1[i]) + p*lambda1*S1[i] + x*p*lambda1*L1[i] - (mu1 + vF + sigmaF1)*F1[i])#
		L1[i+1] <- L1[i] + deltat*((1-g*p)*f*alpha*(N0[i]+N1[i]) + (1-p)*lambda1*S1[i] - x*p*lambda1*L1[i] - (mu1 + vL1 +sigmaL)*L1[i])#
		I1[i+1] <- I1[i] + deltat*(q*(vF*F1[i] + vL1*L1[i]) - (mu1 + mud + phi1)*I1[i])#
		J1[i+1] <- J1[i] + deltat*((1-q)*(vF*F1[i] + vL1*L1[i]) - (mu1 + mud + phi1)*J1[i])#
		N0[i+1] = N0[i] + deltat*((ro - mu0)*N0[i] + ro*N1[i] - mud*(I0[i]+J0[i]))#
    	N1[i+1] = N1[i] + deltat*(alpha*N0[i] + (alpha - mu1)*N1[i] - mud*(I1[i]+J1[i]))#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
resB<-hill(.114,.187)#
resC<-hill(.114,.0935)#
resD<-hill(.114,.04675)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
resAB<-hill(.057,.187,FALSE)#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resAB$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resAB$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resAB$IN1, type="l", col="green", lty=2)#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))#
#
dev.new()#
#
resBB<-hill(.057*4,.187)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resB$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resB$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resB$IN1, type="l", col="green", lty=2)#
lines(1:T*deltat+2000, resBB$IN0, type="l", col="blue", lty=3)#
lines(1:T*deltat+2000, resBB$INall, type="l", col="red", lty=3)#
lines(1:T*deltat+2000, resBB$IN1, type="l", col="green", lty=3)#
#
dev.new()#
#
resCB<-hill(.057*4,.0935)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resC$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resC$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resC$IN1, type="l", col="green", lty=2)#
lines(1:T*deltat+2000, resCB$IN0, type="l", col="blue", lty=3)#
lines(1:T*deltat+2000, resCB$INall, type="l", col="red", lty=3)#
lines(1:T*deltat+2000, resCB$IN1, type="l", col="green", lty=3)#
#
dev.new()#
#
resDB<-hill(.057*4,.04675)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resD$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resD$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resD$IN1, type="l", col="green", lty=2)#
lines(1:T*deltat+2000, resDB$IN0, type="l", col="blue", lty=3)#
lines(1:T*deltat+2000, resDB$INall, type="l", col="red", lty=3)#
lines(1:T*deltat+2000, resDB$IN1, type="l", col="green", lty=3)
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + deltat*(ro*(N0[i]+N1[i]) + sigmaF0*F0[i] + sigmaL*L0[i] + phi0*(I0[i]+J0[i]) - lambda0*S0[i] - mu0*S0[i])#
		F0[i+1] <- F0[i] + deltat*(p*lambda0*S0[i] + x*p*lambda0*L0[i] - (mu0 + vF + sigmaF0)*F0[i] )#
		L0[i+1] <- L0[i] + deltat*((1-p)*lambda0*S0[i] - x*p*lambda0*L0[i] - (mu0 + vL0 + sigmaL)*L0[i])#
		I0[i+1] <- I0[i] + deltat*(q*(vF*F0[i] + vL0*L0[i]) - (mu0 + mud + phi0)*I0[i])#
		J0[i+1] <- J0[i] + deltat*((1-q)*(vF*F0[i]+vL0*L0[i]) - (mu0 + mud + phi0)*J0[i])#
		S1[i+1] <- S1[i] + deltat*((1-f)*alpha*(N0[i]+N1[i]) + sigmaF1*F1[i] + sigmaL*L1[i] + phi1*(I1[i] + J1[i]) - lambda1*S1[i] - mu1*S1[i])#
		F1[i+1] <- F1[i] + deltat*(g*p*f*alpha*(N0[i]+N1[i]) + p*lambda1*S1[i] + x*p*lambda1*L1[i] - (mu1 + vF + sigmaF1)*F1[i])#
		L1[i+1] <- L1[i] + deltat*((1-g*p)*f*alpha*(N0[i]+N1[i]) + (1-p)*lambda1*S1[i] - x*p*lambda1*L1[i] - (mu1 + vL1 +sigmaL)*L1[i])#
		I1[i+1] <- I1[i] + deltat*(q*(vF*F1[i] + vL1*L1[i]) - (mu1 + mud + phi1)*I1[i])#
		J1[i+1] <- J1[i] + deltat*((1-q)*(vF*F1[i] + vL1*L1[i]) - (mu1 + mud + phi1)*J1[i])#
		N0[i+1] = N0[i] + deltat*((ro - mu0)*N0[i] + ro*N1[i] - mud*(I0[i]+J0[i]))#
    	N1[i+1] = N1[i] + deltat*(alpha*N0[i] + (alpha - mu1)*N1[i] - mud*(I1[i]+J1[i]))#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
resB<-hill(.114,.187)#
resC<-hill(.114,.0935)#
resD<-hill(.114,.04675)#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall,resD$IN1))#
resAB<-hill(.057,.187)#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
lines(1:T*deltat+2000, resAB$IN0, type="l", col="blue", lty=2)#
lines(1:T*deltat+2000, resAB$INall, type="l", col="red", lty=2)#
lines(1:T*deltat+2000, resAB$IN1, type="l", col="green", lty=2)#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i]) - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i]) - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i]) - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i]) - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		#IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		#IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		#INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	#IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		#IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		#IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		#INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	#IN0 <- IN1 <- INall <- rep(0,T)#
#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		#IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		#IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		#INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	#IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		#IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		#IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		#INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.csv(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
IN0
resA$IN0
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	#IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		#IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		#IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		#INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.csv(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
resA$IN0
resA$IN1
resA$INall
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	#IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.csv(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.csv(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	write.table(output, file="incData.csv", sep=",")#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA$output, file="incData.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="incData.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="incData.txt", sep=" ")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
vF <- 1.5         #Progression rate of acute infection per year#
vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
popConst <- 1000#
#
generateIncidence <- function(dataSet) {#
  IN0   <- 1e6 * (vF*dataSet$F0 + vL0*dataSet$L0)/dataSet$N0#
  IN1   <- 1e6 * (vF*dataSet$F1 + vL1*dataSet$L1)/dataSet$N1#
  INall <- 1e6 * (vF*(dataSet$F0 + dataSet$F1) + vL0*dataSet$L0 + vL1*dataSet$L1)/(dataSet$N0 + dataSet$N1)#
  #IN0   <- 1e6 * (dataSet$newI0 + dataSet$newJ0)/dataSet$N0#
  #IN1   <- 1e6 * (dataSet$newI1 + dataSet$newJ1)/dataSet$N1#
  #INall <- 1e6 * (dataSet$newI0 + dataSet$newI1 + dataSet$newJ0 + dataSet$newJ1)/(dataSet$N0 + dataSet$N1)#
  frame <- data.frame(IN0,IN1,INall)#
  write.table(frame, file="incData.csv", sep=",")#
  return(frame)#
}#
args <- commandArgs(trailingOnly = T)#
if (length(args) > 0) {#
  firstDataSet <- read.csv('modelDataRun1.csv')#
  deltaT  <- as.numeric(args[1])#
  print(deltaT)#
  if (length(args) > 2) {#
    initialYr <- as.integer(args[2])#
    finalYr   <- as.integer(args[3])#
  } else {#
    # Defaults:#
    initialYr <- 2000#
    finalYr   <- 2100#
  }#
} else if (!exists('noImport')) {#
  firstDataSet   <- read.csv('modelDataRun1.csv')#
  deltaT    <- .05#
  initialYr <- 2000#
  finalYr   <- 2100#
} else if (!exists('dataSet')) {#
  print('No Data to Plot! Either list the import file as a cmd argument, or define it in the calling script')#
  stop()#
} #
if (Sys.info()['sysname'] == "Linux") {#
  #Making it plot on linux#
  X11.options(type='nbcairo')#
}#
#
yrs <- seq(initialYr, finalYr - deltaT, deltaT)#
firstInc <- generateIncidence(firstDataSet)#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type='l'    --> draw line connecting data points#
#col='blue'  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
#Plot:#
yrange <- range(c(0.5,500))#max(firstInc$IN1)))#
dev.new()#
plot( yrs, firstInc$IN0,   main='Incidence over Time', xlab='year', ylab='incidence/million', ylim=yrange, type='l', col='blue', log = 'y')#
lines(yrs, firstInc$INall, type='l', col='red')#
lines(yrs, firstInc$IN1,   type='l', col='green')#
#
filename <- "modelDataRun"#
runNumber <- 2#
extension <- ".csv"#
fileNameFull <- "modelDataRun2.csv"#
while (file.exists(fileNameFull)) {#
	dataSet <- read.csv(fileNameFull)#
	inc <- generateIncidence(dataSet)#
	lines(yrs, inc$IN0, type='l', col='blue')#
	lines(yrs, inc$INall, type='l', col='red')#
	lines(yrs, inc$IN1, type='l', col='green')#
	runNumber <- runNumber + 1#
        if (runNumber == 734) {#
		runNumber <- 757#
	} else if (runNumber == 1047) {#
		runNumber <- 1081#
	}#
	fileNameFull <- paste(filename, as.character(runNumber), extension,sep="")#
    print(fileNameFull)#
}#
#
#Deterministic Data:#
detInc    <- read.csv('detHillData.csv')#
detDeltaT <- (100/length(detInc$IN0))#
detYrs    <- seq(initialYr, finalYr - detDeltaT, detDeltaT)#
lines(detYrs, detInc$IN0,   type='l', col='#052A6E')#
lines(detYrs, detInc$IN1,   type='l', col='#A6D400')#
lines(detYrs, detInc$INall, type='l', col='#00782D')#
#
abline(h = 1, lty = 'dotted')#
legend('topright', legend=c('USB incidence','FB incidence','Total incidence'), col=c('blue', 'green', 'red'), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="incDataLinear.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .001    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="incDataLinear.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .05    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="incDataLinear.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .01    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="incDataLinear.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
deltat <- .005    #The length of each time step (years)#
totT <- 100       #In years#
T <- totT/deltat  #Time steps#
#Variables#
	mu0 <- 1/78       #Natural mortality rate USB per year#
	mu1 <-1/53        #Natural mortality rate FB per year#
	ro <- 0.018       #USB birth rate per year#
	alpha <- 0.005    #FB birth rate per year#
	p <- 0.103        #Fraction of new infections which are acute (fast progressors)#
	vF <- 1.5         #Progression rate of acute infection per year#
	l0 <- 0.015       #Prevalence of LTBI in the USB population in 2000#
	l1 <- 0.211       #Prevalence of LTBI in the FB population in 2000: #
	r0 <- 0.667       #Fraction of cases due to reactivation in the USB population#
	r1 <- 0.780       #Fraction of cases due to reactivation in the FB population#
	vL0 <- 0.0014     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
	vL1 <- 0.0010     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
	q <- 0.708        #Fraction of infections progressing to infectious disease#
	mud <- 0.115      #Mortality rate due to TB per year#
	x <- 0.111        #Fraction of re-infected chronic LTBI moving to acute infection#
   #f <- 0.187        #Fraction of FB arrivals with LTBI#
	ARI0 <- 0.030/100 #Annual risk of infection for USB in 2000#
	beta <- 10.39     #Effective contact rate per year#
	e0 <- 0.965       #Fraction of preferred contacts with own population for USB#
	e1 <-0.985        #Fraction of preferred contacts with own population for FB#
	g <- 0.0047       #Fraction of FB arrivals with LTBI who are fast progressors#
                      #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
	phi0 <- 1.114     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
	phi1 <- 1.167     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                      #Cumulative fraction of treatment for acute infection for both populations: 0.461#
	sigmaF0 <- 1.296  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
	sigmaF1 <- 1.301  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
#
   #sigmaL <- 0.057   #Treatment rate for chronic LTBI per year#
   #deltat <- .001    #The length of each time step (years).#
hill <- function(sigmaL,f,transmission=TRUE){#
#arrays of compartment values#
	S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,T)#
	IN0 <- IN1 <- INall <- rep(0,T)#
#Initial Values#
#
#N0[1] <- 268         #2010 in millions USB#
#N1[1] <- 40          #2010 in millions FB#
#
	N0[1] <- 250         #in millions USB#
	N1[1] <- 31.4        #in millions FB#
#2010 incidence rates http://www.cdc.gov/mmwr/pdf/wk/mm6011.pdf#
#
#Acute (Fast) LTBI#
#F0[1] <- p*l0*N0[1]#
#F1[1] <- p*l1*N1[1]#
	F0[1] <- (1-r0)*(.008714)/vF#
	F1[1] <- (1-r1)*(.007554)/vF#
#Chronic (Long) LTBI#
#L0[1] <- (1-p)*l0*N0[1]#
#L1[1] <- (1-p)*l1*N1[1]#
	L0[1] <- r0*(.008714)/vL0#
	L1[1] <- r1*(.007554)/vL1#
#New Cases in Population i#
	newCases0 <- L0[1]*vL0/r0#
	newCases1 <- L1[1]*vL1/r1#
#Infectious TB, source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
	I0[1] <- q*.008714/(mu0 + mud + phi0)#
	I1[1] <- q*.007554/(mu1 + mud + phi1)#
#I0[1] <- q*.004474/(mu0 + mud + phi0) #using 2010 data, source above#
#I1[1] <- q*.006707/(mu1 + mud + phi1) #2010 data#
#Non-Infectious TB#
	J0[1] <- (1-q)*.008714/(mu0 + mud + phi0)#
	J1[1] <- (1-q)*.007554/(mu1 + mud + phi1)#
#Susceptible#
	S0[1] <- N0[1] - F0[1] - L0[1] - I0[1] - J0[1]#
	S1[1] <- N1[1] - F1[1] - L1[1] - I1[1] - J1[1]#
#
	for (i in 1:T){#
		c01 <- (1-e0)*((1-e1)*N1[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c00 <- 1 - c01#
		c10 <- (1-e1)*((1-e0)*N0[i])/((1-e0)*N0[i] + (1-e1)*N1[i])#
		c11 <- 1 - c10#
		if ((!transmission) && (i*deltat > 8)) {#
			lambda0 <- lambda1 <- 0#
		} else {#
     		lambda0 <- beta*(c00*(I0[i]/N0[i]) + c01*(I1[i]/N1[i]))#
	 		lambda1 <- beta*(c10*(I0[i]/N0[i]) + c11*(I1[i]/N1[i]))#
     	}	#
		S0[i+1] <- S0[i] + (1 - exp(-deltat*ro))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF0))*F0[i] + (1-exp(-deltat*sigmaL))*L0[i] + (1-exp(-deltat*phi0))*(I0[i]+J0[i]) - (1-exp(-deltat*lambda0))*S0[i] - (1-exp(-deltat*mu0))*S0[i]#
		F0[i+1] <- F0[i] + (1-exp(-deltat*p*lambda0))*S0[i] + (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vF + sigmaF0)))*F0[i]#
		L0[i+1] <- L0[i] + (1-exp(-deltat*(1-p)*lambda0))*S0[i] - (1-exp(-deltat*x*p*lambda0))*L0[i] - (1-exp(-deltat*(mu0 + vL0 + sigmaL)))*L0[i]#
		I0[i+1] <- I0[i] + (1-exp(-deltat*q*vF))*F0[i] + (1-exp(-deltat*q*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*I0[i]#
		J0[i+1] <- J0[i] + (1-exp(-deltat*(1-q)*vF))*F0[i]+(1-exp(-deltat*(1-q)*vL0))*L0[i] - (1-exp(-deltat*(mu0 + mud + phi0)))*J0[i]#
		S1[i+1] <- S1[i] + (1-exp(-deltat*(1-f)*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*sigmaF1))*F1[i] + (1-exp(-deltat*sigmaL))*L1[i] + (1-exp(-deltat*phi1))*(I1[i] + J1[i]) - (1-exp(-deltat*lambda1))*S1[i] - (1-exp(-deltat*mu1))*S1[i]#
		F1[i+1] <- F1[i] + (1-exp(-deltat*g*p*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*p*lambda1))*S1[i] + (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vF + sigmaF1)))*F1[i]#
		L1[i+1] <- L1[i] + (1-exp(-deltat*(1-g*p)*f*alpha))*(N0[i]+N1[i]) + (1-exp(-deltat*(1-p)*lambda1))*S1[i] - (1-exp(-deltat*x*p*lambda1))*L1[i] - (1-exp(-deltat*(mu1 + vL1 +sigmaL)))*L1[i]#
		I1[i+1] <- I1[i] + (1-exp(-deltat*q*vF))*F1[i] + (1-exp(-deltat*q*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*I1[i]#
		J1[i+1] <- J1[i] + (1-exp(-deltat*(1-q)*vF))*F1[i] + (1-exp(-deltat*(1-q)*vL1))*L1[i] - (1-exp(-deltat*(mu1 + mud + phi1)))*J1[i]#
		N0[i+1] = N0[i] + (1-exp(-deltat*(ro - mu0)))*N0[i] + (1-exp(-deltat*ro))*N1[i] - (1-exp(-deltat*mud))*(I0[i]+J0[i])#
    	N1[i+1] = N1[i] + (1-exp(-deltat*alpha))*N0[i] + (1-exp(-deltat*(alpha - mu1)))*N1[i] - (1-exp(-deltat*mud))*(I1[i]+J1[i])#
	#calculate incidence data#
		IN0[i] <- 1e6 * (vF*F0[i] + vL0*L0[i])/N0[i]#
		IN1[i] <- 1e6 * (vF*F1[i] + vL1*L1[i])/N1[i]#
		INall[i] <- 1e6 * (vF*(F0[i] + F1[i]) + vL0*L0[i] + vL1*L1[i])/(N0[i] + N1[i])#
	}#
	#IN0 <- 1e6 *(vF*F0 + vL0*L0)/N0#
	#IN1 <- 1e6 * (vF*F1 + vL1*L1)/N1#
	#INall <- 1e6 * (vF*(F0 + F1) + vL0*L0 + vL1*L1)/(N0 + N1)#
	output <- data.frame(IN0,IN1,INall)#
	return(output)#
}#
#
#plot incidence data#
#  xlab, ylab  --> labels for x-, y-axes#
#  log='y'     --> use logarithmic scale#
#  ylim=yrange --> ensure we show all data#
#  type="l"    --> draw line connecting data points#
#col="blue"  --> color of graph#
#lines() plots data in the same window as the first plot() command#
#
resA<-hill(.057,.187)#
write.table(resA, file="detHillData.csv", sep=",")#
#
yrange <- range(c(0.5,resA$IN0,resA$IN1,resA$INall))#
plot(1:T*deltat+2000, resA$IN0, xlab='year', ylab='incidence/million', log = 'y', ylim=yrange, type="l", col="blue")#
lines(1:T*deltat+2000, resA$INall, type="l", col="red")#
lines(1:T*deltat+2000, resA$IN1, type="l", col="green")#
#WHO target incidence line#
abline(h = 1, lty = 'dotted')#
#
#I'm sure there's a better way to do legend()...#
legend('topright', legend=c('USB incidence', 'FB incidence', 'Total incidence'), col=c("blue", "green", "red"), lty=c(1,1,1))
library(deSolve)        # for lsoda routine#
#
# Global parameters#
deltaT <- .005      #The length of each time step (years).#
finalYr <- 100          #In years#
totT <- finalYr/deltaT  #Time steps#
cutoffYr <- 8/deltaT#
#
#Model parameters#
parms <- c(#
mu0 = 1/78,       #Natural mortality rate USB per year#
mu1 = 1/53,       #Natural mortality rate FB per year#
ro = 0.018,       #USB birth rate per year#
alpha = 0.005,    #FB arrival rate per year#
p = 0.103,        #Fraction of new infections which are acute (fast progressors)#
vF = 1.5,         #Progression rate of acute infection per year#
l0 = 0.015,       #Prevalence of LTBI in the USB population in 2000#
l1 = 0.211,       #Prevalence of LTBI in the FB population in 2000: #
r0 = 0.667,       #Fraction of cases due to reactivation in the USB population#
r1 = 0.780,       #Fraction of cases due to reactivation in the FB population#
vL0 = 0.0014,     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
vL1 = 0.0010,     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
q = 0.708,        #Fraction of infections progressing to infectious disease#
mud = 0.115,      #Mortality rate due to TB per year#
x = 0.111,        #Fraction of re-infected chronic LTBI moving to acute infection#
f = 0.187,        #Fraction of FB arrivals with LTBI#
ARI0 = 0.030/100, #Annual risk of infection for USB in 2000#
beta = 10.39,     #Effective contact rate per year#
e0 = 0.965,       #Fraction of preferred contacts with own population for USB#
e1 = 0.985,       #Fraction of preferred contacts with own population for FB#
g = 0.0047,       #Fraction of FB arrivals with LTBI who are fast progressors#
                  #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
phi0 = 1.114,     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
phi1 = 1.167,     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                  #Cumulative fraction of treatment for acute infection for both populations: 0.461#
sigmaF0 = 1.296,  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
sigmaF1 = 1.301,  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
sigmaL = 0.057,   #Treatment rate for chronic LTBI per year#
#
transmission = TRUE             #does transmission occur?#
)#
#
#Initial Values#
#Matrix of compartment values#
S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,totT)#
P <- data.frame(S0,F0,L0,I0,J0,S1,F1,L1,I1,J1,N0,N1)#
#2010 New Cases in Population i (millions)#
#source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
newCases0 <- .008714  #US-born#
newCases1 <- .007554  #Foreign-born#
#
# parameter variable names made accessible via "with" function#
P <- with(as.list(parms), {#
#Total Population#
P$N0[1] <- 250#
P$N1[1] <- 31.4#
#Acute (Fast) LTBI, new cases#
P$F0[1] <- (1-r0)*(newCases0)/vF#
P$F1[1] <- (1-r1)*(newCases1)/vF#
#Chronic (Long) LTBI#
P$L0[1] <- r0*(newCases0)/vL0#
P$L1[1] <- r1*(newCases1)/vL1#
#Infectious TB#
P$I0[1] <- q*newCases0/(mu0 + mud + phi0)#
P$I1[1] <- q*newCases1/(mu1 + mud + phi1)#
#Non-Infectious TB#
P$J0[1] <- (1-q)*newCases0/(mu0 + mud + phi0)#
P$J1[1] <- (1-q)*newCases1/(mu1 + mud + phi1)#
#Susceptible#
P$S0[1] <- P$N0[1] - P$F0[1] - P$L0[1] - P$I0[1] - P$J0[1]#
P$S1[1] <- P$N1[1] - P$F1[1] - P$L1[1] - P$I1[1] - P$J1[1]#
return(P)#
})#
#
Pdot <- function(t, v, parms){#
with(as.list(c(parms, v)), {#
    # helper parameters#
    c01 <- (1-e0)*((1-e1)*N1)/((1-e0)*N0 + (1-e1)*N1)#
    c00 <- 1 - c01#
    c10 <- (1-e1)*((1-e0)*N0)/((1-e0)*N0 + (1-e1)*N1)#
    c11 <- 1 - c10#
    if (transmission) {#
        lambda0 <- beta*(c00*(I0/N0) + c01*(I1/N1))#
        lambda1 <- beta*(c10*(I0/N0) + c11*(I1/N1))#
    } else {#
        lambda0 <- lambda1 <- 0#
    }#
    #Differential Equations#
    dS0 <- ro*(N0+N1) + sigmaF0*F0 + sigmaL*L0 + phi0*(I0+J0) - lambda0*S0 - mu0*S0#
    dF0 <- p*lambda0*S0 + x*p*lambda0*L0 - (mu0 + vF + sigmaF0)*F0#
    dL0 <- (1-p)*lambda0*S0 - x*p*lambda0*L0 - (mu0 + vL0 + sigmaL)*L0#
    dI0 <- q*(vF*F0 + vL0*L0) - (mu0 + mud + phi0)*I0#
    dJ0 <- (1-q)*(vF*F0+vL0*L0) - (mu0 + mud + phi0)*J0#
    dS1 <- (1-f)*alpha*(N0+N1) + sigmaF1*F1 + sigmaL*L1 + phi1*(I1 + J1) - lambda1*S1 - mu1*S1#
    dF1 <- g*p*f*alpha*(N0+N1) + p*lambda1*S1 + x*p*lambda1*L1 - (mu1 + vF + sigmaF1)*F1#
    dL1 <- (1-g*p)*f*alpha*(N0+N1) + (1-p)*lambda1*S1 - x*p*lambda1*L1 - (mu1 + vL1 +sigmaL)*L1#
    dI1 <- q*(vF*F1 + vL1*L1) - (mu1 + mud + phi1)*I1#
    dJ1 <- (1-q)*(vF*F1 + vL1*L1) - (mu1 + mud + phi1)*J1#
    dN0 <- (ro - mu0)*N0 + ro*N1 - mud*(I0 + J0)#
    dN1 <- alpha*N0 + (alpha - mu1)*N1 - mud*(I1 + J1)#
    return ( list(c(dS0, dF0, dL0, dI0, dJ0, dS1, dF1, dL1, dI1, dJ1, dN0, dN1)) )#
    })#
}#
#
hill <- function(sigmaL, f, transmission=TRUE, initial=cutoffYr+1, final=totT+1, dataSet=P) {#
    # set values in parms according to function parameters#
    parms[c('sigmaL', 'f', 'transmission')] <- c(sigmaL, f, transmission)#
    # recursive=TRUE collapses dataframe to labeled vector#
    initv <- c(dataSet[initial,], recursive=TRUE)#
    # times = data points to be calculated#
    times <- initial:final*deltaT#
#
    # compute master results#
    mres <- lsoda(initv, times, Pdot, parms)#
    # mres[,-1] = mres without 1st column#
    dataSet[initial:final,] <- c(mres[,-1])#
    return(dataSet)#
}#
#
generateIncidence <- function(mres) {#
    with(as.list(parms), {#
        IN0 <- 1e6 * (vF*mres$F0 + vL0*mres$L0)/mres$N0#
        IN1 <- 1e6 * (vF*mres$F1 + vL1*mres$L1)/mres$N1#
        INall <- 1e6 * (vF*(mres$F0 + mres$F1) + vL0*mres$L0 + vL1*mres$L1)/(mres$N0 + mres$N1)#
        return(data.frame(IN0, IN1, INall))#
    })#
}#
#
sigmaLBase <- 0.057#
fBase <- 0.187#
yrs <- seq(2000, 2000+finalYr, deltaT)#
#
P<-hill(sigmaLBase,fBase,T,1,totT+1)#
baseInc <- generateIncidence(P)#
write.table(output, file="detHillData.csv", sep=",")
library(deSolve)        # for lsoda routine#
#
# Global parameters#
deltaT <- .005      #The length of each time step (years).#
finalYr <- 100          #In years#
totT <- finalYr/deltaT  #Time steps#
cutoffYr <- 8/deltaT#
#
#Model parameters#
parms <- c(#
mu0 = 1/78,       #Natural mortality rate USB per year#
mu1 = 1/53,       #Natural mortality rate FB per year#
ro = 0.018,       #USB birth rate per year#
alpha = 0.005,    #FB arrival rate per year#
p = 0.103,        #Fraction of new infections which are acute (fast progressors)#
vF = 1.5,         #Progression rate of acute infection per year#
l0 = 0.015,       #Prevalence of LTBI in the USB population in 2000#
l1 = 0.211,       #Prevalence of LTBI in the FB population in 2000: #
r0 = 0.667,       #Fraction of cases due to reactivation in the USB population#
r1 = 0.780,       #Fraction of cases due to reactivation in the FB population#
vL0 = 0.0014,     #Progression rate for reactivation (chronic LTBI) in the USB population per year#
vL1 = 0.0010,     #Progression rate for reactivation (chronic LTBI) in the FB population per year#
q = 0.708,        #Fraction of infections progressing to infectious disease#
mud = 0.115,      #Mortality rate due to TB per year#
x = 0.111,        #Fraction of re-infected chronic LTBI moving to acute infection#
f = 0.187,        #Fraction of FB arrivals with LTBI#
ARI0 = 0.030/100, #Annual risk of infection for USB in 2000#
beta = 10.39,     #Effective contact rate per year#
e0 = 0.965,       #Fraction of preferred contacts with own population for USB#
e1 = 0.985,       #Fraction of preferred contacts with own population for FB#
g = 0.0047,       #Fraction of FB arrivals with LTBI who are fast progressors#
                  #Cumulative fraction self-cure and treatment of active disease for both populations: 0.897#
phi0 = 1.114,     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (USB)#
phi1 = 1.167,     #Cumulative fraction self-cure and treatment of active disease for both populations pre year RATES (FB)#
                  #Cumulative fraction of treatment for acute infection for both populations: 0.461#
sigmaF0 = 1.296,  #Cumulative fraction of treatment for acute infection for both populations per year RATES (USB)#
sigmaF1 = 1.301,  #Cumulative fraction of treatment for acute infection for both populations per year RATES (FB)#
sigmaL = 0.057,   #Treatment rate for chronic LTBI per year#
#
transmission = TRUE             #does transmission occur?#
)#
#
#Initial Values#
#Matrix of compartment values#
S0 <- S1 <- F0 <- F1 <- L0 <- L1 <- I0 <- I1 <- J0 <- J1 <- N0 <- N1 <- rep(0,totT)#
P <- data.frame(S0,F0,L0,I0,J0,S1,F1,L1,I1,J1,N0,N1)#
#2010 New Cases in Population i (millions)#
#source: http://www.cdc.gov/mmwr/preview/mmwrhtml/mm5105a3.htm#
newCases0 <- .008714  #US-born#
newCases1 <- .007554  #Foreign-born#
#
# parameter variable names made accessible via "with" function#
P <- with(as.list(parms), {#
#Total Population#
P$N0[1] <- 250#
P$N1[1] <- 31.4#
#Acute (Fast) LTBI, new cases#
P$F0[1] <- (1-r0)*(newCases0)/vF#
P$F1[1] <- (1-r1)*(newCases1)/vF#
#Chronic (Long) LTBI#
P$L0[1] <- r0*(newCases0)/vL0#
P$L1[1] <- r1*(newCases1)/vL1#
#Infectious TB#
P$I0[1] <- q*newCases0/(mu0 + mud + phi0)#
P$I1[1] <- q*newCases1/(mu1 + mud + phi1)#
#Non-Infectious TB#
P$J0[1] <- (1-q)*newCases0/(mu0 + mud + phi0)#
P$J1[1] <- (1-q)*newCases1/(mu1 + mud + phi1)#
#Susceptible#
P$S0[1] <- P$N0[1] - P$F0[1] - P$L0[1] - P$I0[1] - P$J0[1]#
P$S1[1] <- P$N1[1] - P$F1[1] - P$L1[1] - P$I1[1] - P$J1[1]#
return(P)#
})#
#
Pdot <- function(t, v, parms){#
with(as.list(c(parms, v)), {#
    # helper parameters#
    c01 <- (1-e0)*((1-e1)*N1)/((1-e0)*N0 + (1-e1)*N1)#
    c00 <- 1 - c01#
    c10 <- (1-e1)*((1-e0)*N0)/((1-e0)*N0 + (1-e1)*N1)#
    c11 <- 1 - c10#
    if (transmission) {#
        lambda0 <- beta*(c00*(I0/N0) + c01*(I1/N1))#
        lambda1 <- beta*(c10*(I0/N0) + c11*(I1/N1))#
    } else {#
        lambda0 <- lambda1 <- 0#
    }#
    #Differential Equations#
    dS0 <- ro*(N0+N1) + sigmaF0*F0 + sigmaL*L0 + phi0*(I0+J0) - lambda0*S0 - mu0*S0#
    dF0 <- p*lambda0*S0 + x*p*lambda0*L0 - (mu0 + vF + sigmaF0)*F0#
    dL0 <- (1-p)*lambda0*S0 - x*p*lambda0*L0 - (mu0 + vL0 + sigmaL)*L0#
    dI0 <- q*(vF*F0 + vL0*L0) - (mu0 + mud + phi0)*I0#
    dJ0 <- (1-q)*(vF*F0+vL0*L0) - (mu0 + mud + phi0)*J0#
    dS1 <- (1-f)*alpha*(N0+N1) + sigmaF1*F1 + sigmaL*L1 + phi1*(I1 + J1) - lambda1*S1 - mu1*S1#
    dF1 <- g*p*f*alpha*(N0+N1) + p*lambda1*S1 + x*p*lambda1*L1 - (mu1 + vF + sigmaF1)*F1#
    dL1 <- (1-g*p)*f*alpha*(N0+N1) + (1-p)*lambda1*S1 - x*p*lambda1*L1 - (mu1 + vL1 +sigmaL)*L1#
    dI1 <- q*(vF*F1 + vL1*L1) - (mu1 + mud + phi1)*I1#
    dJ1 <- (1-q)*(vF*F1 + vL1*L1) - (mu1 + mud + phi1)*J1#
    dN0 <- (ro - mu0)*N0 + ro*N1 - mud*(I0 + J0)#
    dN1 <- alpha*N0 + (alpha - mu1)*N1 - mud*(I1 + J1)#
    return ( list(c(dS0, dF0, dL0, dI0, dJ0, dS1, dF1, dL1, dI1, dJ1, dN0, dN1)) )#
    })#
}#
#
hill <- function(sigmaL, f, transmission=TRUE, initial=cutoffYr+1, final=totT+1, dataSet=P) {#
    # set values in parms according to function parameters#
    parms[c('sigmaL', 'f', 'transmission')] <- c(sigmaL, f, transmission)#
    # recursive=TRUE collapses dataframe to labeled vector#
    initv <- c(dataSet[initial,], recursive=TRUE)#
    # times = data points to be calculated#
    times <- initial:final*deltaT#
#
    # compute master results#
    mres <- lsoda(initv, times, Pdot, parms)#
    # mres[,-1] = mres without 1st column#
    dataSet[initial:final,] <- c(mres[,-1])#
    return(dataSet)#
}#
#
generateIncidence <- function(mres) {#
    with(as.list(parms), {#
        IN0 <- 1e6 * (vF*mres$F0 + vL0*mres$L0)/mres$N0#
        IN1 <- 1e6 * (vF*mres$F1 + vL1*mres$L1)/mres$N1#
        INall <- 1e6 * (vF*(mres$F0 + mres$F1) + vL0*mres$L0 + vL1*mres$L1)/(mres$N0 + mres$N1)#
        return(data.frame(IN0, IN1, INall))#
    })#
}#
#
sigmaLBase <- 0.057#
fBase <- 0.187#
yrs <- seq(2000, 2000+finalYr, deltaT)#
#
P<-hill(sigmaLBase,fBase,T,1,totT+1)#
baseInc <- generateIncidence(P)#
write.table(baseInc, file="detHillData.csv", sep=",")
